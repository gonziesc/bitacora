{"data":{"site":{"siteMetadata":{"title":"Bit√°cora üìö","author":"pdep"}},"markdownRemark":{"id":"a2ccd93c-53cc-52e5-8f30-7a7e34a904ff","excerpt":"Tarea para la clase que viene Terminar el TP grupal. Hacer hasta la lecci√≥n 11 (inclusive) de  Mumuki Functores, pattern matching y polimorfismo Hasta ahora, en‚Ä¶","html":"<h2 id=\"tarea-para-la-clase-que-viene\"><a href=\"#tarea-para-la-clase-que-viene\" aria-label=\"tarea para la clase que viene permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Tarea para la clase que viene</h2>\n<ul>\n<li>Terminar el TP grupal.</li>\n<li>Hacer hasta la lecci√≥n 11 (inclusive) de <a href=\"https://mumuki.io/pdep-utn/chapters/307-programacion-logica\">Mumuki</a></li>\n</ul>\n<h2 id=\"functores-pattern-matching-y-polimorfismo\"><a href=\"#functores-pattern-matching-y-polimorfismo\" aria-label=\"functores pattern matching y polimorfismo permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Functores, pattern matching y polimorfismo</h2>\n<p>Hasta ahora, en l√≥gico siempre hicimos consultas en las cuales nuestros individuos eran simples.\nPero adem√°s de los individuos simples, tambi√©n existen los <strong>individuos complejos</strong>. üßê\nLos <em>functores</em> son individuos complejos y tienen:</p>\n<ul>\n<li>Un nombre que los identifica</li>\n<li>Una aridad</li>\n</ul>\n<p>En nuestra base de conocimientos ten√≠amos libros, ahora conocemos los tipos de libros, que pueden ser:</p>\n<ul>\n<li><code class=\"language-text\">novela(Genero, CantidadDePaginas)</code></li>\n<li><code class=\"language-text\">libroDeCuentos(CantidadDeCuentos)</code></li>\n<li><code class=\"language-text\">cientifico(Disciplina)</code> </li>\n<li><code class=\"language-text\">bestSeller(Precio, CantidadDePaginas)</code></li>\n</ul>\n<p>Adem√°s contamos con un predicado <code class=\"language-text\">tipo/2</code> que relaciona a cada libro con su tipo.</p>\n<p>Ahora queremos saber si un libro est√° bueno, esto se cumple cuando:</p>\n<ul>\n<li>Es una novela policial y tiene m√°s de 150 p√°ginas.</li>\n<li>Es una novela de terror.</li>\n<li>Los libros con m√°s de 10 cuentos siempre son buenos.</li>\n<li>Es un libro cient√≠fico de fisicaCuantica.</li>\n<li>Es un best seller y el precio por p√°gina es menor a $50.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">estaBueno</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Libro</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">tipo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Libro</span><span class=\"token punctuation\">,</span> <span class=\"token function\">novela</span><span class=\"token punctuation\">(</span>policial<span class=\"token punctuation\">,</span> <span class=\"token variable\">Paginas</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token variable\">Paginas</span> <span class=\"token operator\">></span> <span class=\"token number\">150.</span>\n<span class=\"token function\">estaBueno</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Libro</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">tipo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Libro</span><span class=\"token punctuation\">,</span> <span class=\"token function\">novela</span><span class=\"token punctuation\">(</span>terror<span class=\"token punctuation\">,</span> <span class=\"token variable\">_</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\n<span class=\"token function\">estaBueno</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Libro</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">tipo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Libro</span><span class=\"token punctuation\">,</span> <span class=\"token function\">libroDeCuentos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">CantidadDeCuentos</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token variable\">CantidadDeCuentos</span> <span class=\"token operator\">></span> <span class=\"token number\">10.</span>\n<span class=\"token function\">estaBueno</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Libro</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">tipo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Libro</span><span class=\"token punctuation\">,</span> <span class=\"token function\">cientifico</span><span class=\"token punctuation\">(</span>fisicaCuantica<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\n<span class=\"token function\">estaBueno</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Libro</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">tipo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Libro</span><span class=\"token punctuation\">,</span> <span class=\"token function\">bestSeller</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Precio</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Paginas</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token variable\">Precio</span> <span class=\"token operator\">/</span> <span class=\"token variable\">Paginas</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">50.</span></code></pre></div>\n<blockquote>\n<p>Si bien los functores se escriben como un predicado, <strong>NO</strong> son un predicado. Como ven, los estamos usando como par√°metro en nuestras consultas.</p>\n</blockquote>\n<p>Ahora, mirando üî≠ un poco a nuestro c√≥digo anterior, podemos ver l√≥gica repetida y eso no nos gusta mucho. üëé</p>\n<p>Veamos c√≥mo podr√≠amos cambiar esto‚Ä¶</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">estaBueno</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Libro</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">tipo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Libro</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Tipo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">esTipoCopado</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Tipo</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\n<span class=\"token function\">esTipoCopado</span><span class=\"token punctuation\">(</span><span class=\"token function\">novela</span><span class=\"token punctuation\">(</span>policial<span class=\"token punctuation\">,</span> <span class=\"token variable\">Paginas</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token variable\">Paginas</span> <span class=\"token operator\">></span> <span class=\"token number\">150.</span>\n<span class=\"token function\">esTipoCopado</span><span class=\"token punctuation\">(</span><span class=\"token function\">novela</span><span class=\"token punctuation\">(</span>terror<span class=\"token punctuation\">,</span> <span class=\"token variable\">_</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\n<span class=\"token function\">esTipoCopado</span><span class=\"token punctuation\">(</span><span class=\"token function\">libroDeCuentos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">CantidadDeCuentos</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token variable\">CantidadDeCuentos</span> <span class=\"token operator\">></span> <span class=\"token number\">10.</span>\n<span class=\"token function\">esTipoCopado</span><span class=\"token punctuation\">(</span><span class=\"token function\">cientifico</span><span class=\"token punctuation\">(</span>fisicaCuantica<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\n<span class=\"token function\">esTipoCopado</span><span class=\"token punctuation\">(</span><span class=\"token function\">bestSeller</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Precio</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Paginas</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token variable\">Precio</span> <span class=\"token operator\">/</span> <span class=\"token variable\">Paginas</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">50.</span></code></pre></div>\n<p>Tenemos un par de cosas interesantes aqu√≠. ü§î</p>\n<p>Primero, si prestamos atenci√≥n a c√≥mo definimos el predicado <code class=\"language-text\">esTipoCopado</code>, podemos ver que estamos <strong>deconstruyendo</strong> (o abriendo) a los functores que representan el tipo de los libros.<br>\nPor ejemplo, en esta cla√∫sula, el tipo va a unificar s√≥lo con aquellas novelas que sean policiales.</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">esTipoCopado</span><span class=\"token punctuation\">(</span><span class=\"token function\">novela</span><span class=\"token punctuation\">(</span>policial<span class=\"token punctuation\">,</span> <span class=\"token variable\">Paginas</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token variable\">Paginas</span> <span class=\"token operator\">></span> <span class=\"token number\">150.</span>\n<span class=\"token comment\">% adem√°s la variable Paginas va a unificar</span>\n<span class=\"token comment\">% con la cantidad de p√°ginas de esa novela</span></code></pre></div>\n<p>Adem√°s, cada functor va a ‚Äúsaber‚Äù con qu√© cla√∫sula del predicado quedarse.<br>\nTodo esto gracias a que tenemos <em>Pattern Matching</em>. üéâ</p>\n<p>En segundo lugar, podemos ver como al predicado <code class=\"language-text\">tipoCopado</code> no le importa para nada que <em>forma</em> puede llegar a tener el functor del tipo de libro.<br>\nAl hecho de tratar variables indistintamente de su forma lo llamamos <strong>polimorfismo</strong> üíó y va a ser un concepto muy importante y √∫til desde ahora hasta siempre. üò±</p>\n<h2 id=\"findall-y-listas\"><a href=\"#findall-y-listas\" aria-label=\"findall y listas permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Findall y listas</h2>\n<p>Ahora queremos saber el puntaje de un autor, este se calcula como <code class=\"language-text\">3 * cantidad de libros buenos que escribi√≥</code>.</p>\n<p>Recordemos, que en nuestra base de conocimientos, contamos con un predicado <code class=\"language-text\">escribio/2</code> que relaciona a un autor con el libro que escribi√≥.</p>\n<p>Podr√≠amos empezar escribiendo un predicado que relacione un autor con un libro bueno que haya escrito:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">escribioLibroBueno</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Autor</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Libro</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">escribio</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Autor</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Libro</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">estaBueno</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Libro</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span></code></pre></div>\n<p>Y en nuestra consola podemos hacer consultas como esta:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token operator\">?-</span> <span class=\"token function\">escribioLibroBueno</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Autor</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Libro</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\n<span class=\"token variable\">Autor</span> <span class=\"token operator\">=</span> stephenKing<span class=\"token punctuation\">,</span>\n<span class=\"token variable\">Libro</span> <span class=\"token operator\">=</span> it <span class=\"token operator\">;</span>\n<span class=\"token variable\">Autor</span> <span class=\"token operator\">=</span> horacioQuiroga<span class=\"token punctuation\">,</span>\n<span class=\"token variable\">Libro</span> <span class=\"token operator\">=</span> cuentosDeLaSelva <span class=\"token operator\">;</span>\n<span class=\"token variable\">Autor</span> <span class=\"token operator\">=</span> stephenKing<span class=\"token punctuation\">,</span>\n<span class=\"token variable\">Libro</span> <span class=\"token operator\">=</span> misery <span class=\"token operator\">;</span>\n<span class=\"token variable\">Autor</span> <span class=\"token operator\">=</span> stephenKing<span class=\"token punctuation\">,</span>\n<span class=\"token variable\">Libro</span> <span class=\"token operator\">=</span> elJuegoDeGerald <span class=\"token operator\">;</span>\n<span class=\"token variable\">Autor</span> <span class=\"token operator\">=</span> stephenKing<span class=\"token punctuation\">,</span>\n<span class=\"token variable\">Libro</span> <span class=\"token operator\">=</span> carrie <span class=\"token operator\">.</span></code></pre></div>\n<p>Si bien, como <code class=\"language-text\">escribioLibroBueno</code> es inversible, podemos consultar por los valores que puede tomar la variable <code class=\"language-text\">Libro</code>. ¬øPero c√≥mo podr√≠amos trabajar con todos los libros buenos que escribi√≥ un autor al mismo tiempo? Bueno, podr√≠amos agruparlo en una <strong>lista</strong>!!</p>\n<p>Para lograr esto contamos con un predicado llamado <code class=\"language-text\">findall/3</code>. Este se escribe de la forma <code class=\"language-text\">findall(Formato, Consulta, Lista)</code> y es inversible para su √∫ltimo argumento.</p>\n<p>Entonces, ahora podr√≠amos escribir un predicado <code class=\"language-text\">librosBuenosQueEscribio/2</code> que relacione a un autor con todos los libros que escribi√≥ y que adem√°s est√°n buenos.</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">librosBuenosQueEscribio</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Autor</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Libros</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">autor</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Autor</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">findall</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Libro</span><span class=\"token punctuation\">,</span> <span class=\"token function\">escribioLibroBueno</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Autor</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Libro</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Libros</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span></code></pre></div>\n<p>Y podemos consultar:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token operator\">?-</span> <span class=\"token function\">librosBuenosQueEscribio</span><span class=\"token punctuation\">(</span>stephenKing<span class=\"token punctuation\">,</span> <span class=\"token variable\">Libros</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span>\n<span class=\"token variable\">Libros</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>it<span class=\"token punctuation\">,</span> misery<span class=\"token punctuation\">,</span> carrie<span class=\"token punctuation\">,</span> elJuegoDeGerald<span class=\"token punctuation\">]</span>\n<span class=\"token comment\">% notar que tambi√©n podr√≠amos hacer consultas</span>\n<span class=\"token comment\">% dejando al Autor como variable (es totalmente inversible)</span></code></pre></div>\n<p>Ahora, la cantidad de libros buenos que escribi√≥ ese autor ser√≠a el tama√±o de esa lista.<br>\nY bueno, ¬øc√≥mo creen que prolog podr√≠a relacionar a una lista con su tama√±o?<br>\nS√≠, ¬°con un predicado ü§©! Contamos con <code class=\"language-text\">length(Lista, Tamanio)</code>, que es inversible para el tama√±o.</p>\n<p>Entonces podr√≠amos escribir:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">cantidadDeLibrosBuenos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Autor</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Cantidad</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n    <span class=\"token function\">librosBuenosQueEscribio</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Autor</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">UnosLibros</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token variable\">UnosLibros</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Cantidad</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span></code></pre></div>\n<p>Y ahora, por fin, ya podemos resolver nuestro problema inicial üòù:</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">puntaje</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Autor</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Puntaje</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">cantidadDeLibrosBuenos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Autor</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Cantidad</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token variable\">Puntaje</span> <span class=\"token operator\">is</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token variable\">Cantidad</span><span class=\"token operator\">.</span></code></pre></div>\n<h2 id=\"is\"><a href=\"#is\" aria-label=\"is permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>is</h2>\n<p>Pero, un momento, ¬øqu√© es esto de <code class=\"language-text\">is</code>?<br>\nBueno, <code class=\"language-text\">is</code> es un predicado que relaciona a una cuenta <em>(a la derecha)</em> con su resultado <em>(a la izquierda)</em>. Es inversible para el resultado: liga la variable del <code class=\"language-text\">Resultado</code> al resultado de la expresi√≥n matem√°tica de la derecha.</p>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token variable\">Resultado</span> <span class=\"token operator\">is</span> <span class=\"token variable\">ExpresionMatematica</span></code></pre></div>\n<p>Entonces:</p>\n<ul>\n<li>¬øCu√°ndo usamos <code class=\"language-text\">is</code>?<br>\nBueno, <strong>solamente</strong> cuando necesitamos realizar cuentas.</li>\n<li>¬øY en en d√≥nde m√°s?<br>\nEn ning√∫n otro caso. Usar <code class=\"language-text\">is</code> s√≥lo para ligar variables est√° <strong>MAL</strong> y nadie quisiera reprobar su parcial de l√≥gico por eso. üëÆüèª‚Äç</li>\n</ul>\n<h4 id=\"ejercicios\"><a href=\"#ejercicios\" aria-label=\"ejercicios permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ejercicios</h4>\n<ul>\n<li>Ahora queremos conocer el <code class=\"language-text\">promedioDePuntajes</code> que es el promedio de puntajes de todos los escritores.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">promedioDePuntajes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Promedio</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:-</span>\n  <span class=\"token function\">findall</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Puntaje</span><span class=\"token punctuation\">,</span> <span class=\"token function\">puntaje</span><span class=\"token punctuation\">(</span><span class=\"token variable\">_</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Puntaje</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">ListaPuntajes</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">sumlist</span><span class=\"token punctuation\">(</span><span class=\"token variable\">ListaPuntajes</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Total</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token variable\">ListaPuntajes</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">CantidadPuntajes</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token variable\">Promedio</span> <span class=\"token operator\">is</span> <span class=\"token variable\">Total</span> <span class=\"token operator\">/</span> <span class=\"token variable\">CantidadPuntajes</span><span class=\"token operator\">.</span></code></pre></div>\n<ul>\n<li>Queremos saber si un escritor merece un nobel, esto sucede s√≥lo si todo lo que escribi√≥ es bueno.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"prolog\"><pre class=\"language-prolog\"><code class=\"language-prolog\"><span class=\"token function\">mereceUnNobel</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Autor</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:-</span>\n  <span class=\"token function\">esAutor</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Autor</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">forall</span><span class=\"token punctuation\">(</span><span class=\"token function\">escribio</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Autor</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">Libro</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">estaBueno</span><span class=\"token punctuation\">(</span><span class=\"token variable\">Libro</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span></code></pre></div>\n<h2 id=\"links-√∫tiles\"><a href=\"#links-%C3%BAtiles\" aria-label=\"links √∫tiles permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Links √∫tiles</h2>\n<ul>\n<li><a href=\"http://wiki.uqbar.org/wiki/articles/paradigma-logico---functores.html\">Wiki functores</a></li>\n<li><a href=\"http://wiki.uqbar.org/wiki/articles/polimorfismo-en-el-paradigma-logico.html\">Wiki polimorfismo</a></li>\n<li><a href=\"http://wiki.uqbar.org/wiki/articles/aritmetica-en-prolog.html\">Wiki aritm√©tica/is</a></li>\n<li><a href=\"http://wiki.uqbar.org/wiki/articles/paradigma-logico---listas.html\">Wiki findall/listas</a></li>\n<li><a href=\"https://gist.github.com/mnmallea/c2378a0afe713b483c3f233ca12d2f5e\">C√≥digo de la clase de hoy</a></li>\n</ul>","frontmatter":{"title":"D√©cima clase","date":"03-06-2019","description":"Functores, is, pattern matching y polimorfismo. Findall y listas.","tags":["logico","functores","pattern-matching","polimorfismo","findall","is","listas"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/logico/clase-03/","previous":{"fields":{"slug":"/logico/clase-02/"},"frontmatter":{"title":"Novena clase"}},"next":null}}